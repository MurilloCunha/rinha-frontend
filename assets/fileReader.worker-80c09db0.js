(function(){"use strict";async function f(e){return new Promise((t,r)=>{const n=new FileReader;n.readAsText(e),n.onload=s=>{var o;try{const a=JSON.parse(String((o=s.target)==null?void 0:o.result));t(a)}catch{r({error:"invalid Json"})}}})}const i=[];let g=0;function*l(e,t=0){const r=Object.entries(e);for(const[n,s]of r)if(typeof s=="object"&&s!==null){const{id:o,parentId:a}=d(t);yield{id:o,key:n,value:"",parentId:a,isNestedList:!0,isArray:!!(s!=null&&s.length)},yield*l(s,t+1)}else yield{key:n,value:typeof s=="string"?`"${s}"`:s||"null",parentId:c(t)}}function d(e){const t=++g;return i.length>e&&i.splice(e,i.length-e),i.push(t),{id:String(t),parentId:c(e)}}function c(e){return String(i[e-1])}let u;function h(e){const{message:t,file:r}=e.data;if(t==="parse_file"&&r){f(r).then(n=>{u=l(n),postMessage({message:"parse_finished",fileName:r.name})}).catch(()=>{postMessage({message:"error"})});return}if(t==="next_chunk"){const n=u.next().value;postMessage(n?{message:"chunk_to_render",htmlChunk:n}:{message:"html_finished"});return}}onmessage=h})();
